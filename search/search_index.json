{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#netbox-librenms-plugin","title":"NetBox LibreNMS Plugin","text":""},{"location":"#intro","title":"Intro","text":"<p>The NetBox LibreNMS Plugin enables integration between NetBox and LibreNMS, allowing you to leverage data from both systems. NetBox remains the Source of Truth (SoT) for you network, but this plugin allows you to easily onboard device objects from existing data in LibreNMS. The plugin does not automatically create objects in NetBox to ensure only verified data is used to populate NetBox.</p>"},{"location":"#features","title":"Features","text":"<p>The plugin offers the following key features:</p>"},{"location":"#device-field-sync","title":"Device Field Sync","text":"<p>Synchronize device information from LibreNMS to NetBox. The following device fields can be synchronized:</p> <ul> <li>Serial Number (including virtual chassis members)</li> <li>Device Type</li> <li>Platform</li> </ul>"},{"location":"#interface-sync","title":"Interface Sync","text":"<p>Pull interface data from Devices and Virtual Machines from LibreNMS into NetBox. The following interface attributes are synchronized:</p> <ul> <li>Name</li> <li>Description</li> <li>Status (Enabled/Disabled)</li> <li>Type (with custom mapping support)</li> <li>Speed</li> <li>MTU</li> <li>MAC Address</li> </ul> <p>Set custom mappings for interface types to ensure that the correct interface type is used when syncing from LibreNMS to NetBox.</p>"},{"location":"#cable-sync","title":"Cable Sync","text":"<p>Create cable connection in NetBox from LibreNMS links data.</p>"},{"location":"#ip-address-sync","title":"IP Address Sync","text":"<p>Create IP address in NetBox from LibreNMS device IP data.</p>"},{"location":"#add-device-to-librenms-from-netbox","title":"Add device to LibreNMS from Netbox","text":"<ul> <li>Add device to LibreNMS from Netbox device page. SNMP v2c and v3 are supported.</li> </ul>"},{"location":"#site-location-sync","title":"Site &amp; Location Sync","text":"<p>The plugin also supports synchronizing NetBox Sites with LibreNMS locations:</p> <ul> <li>Compare NetBox sites to LibreNMS location data</li> <li>Create LibreNMS locations to match NetBox sites</li> <li>Update existing LibreNMS locations latitude and longitude values based on NetBox data \u26a0\ufe0f (currently not working due to LibreNMS API issue)</li> <li>Sync device site to LibreNMS location</li> </ul>"},{"location":"#screnshotsgifs","title":"Screnshots/GIFs","text":"<p>Screenshots from older plugin version</p>"},{"location":"#site-location-sync_1","title":"Site &amp; Location Sync","text":""},{"location":"#sync-devices-and-interfaces","title":"Sync devices and Interfaces","text":""},{"location":"#virtual-chassis-member-select","title":"Virtual Chassis Member Select","text":""},{"location":"#interface-type-mappings","title":"Interface Type Mappings","text":""},{"location":"#contributing","title":"Contributing","text":"<p>There's more to do! Coding is not my day job so bugs will exist and imporvements will be needed. Contributions are very welcome! I've got more ideas for new features and imporvements but please contribute if you can!</p> <p>Or just share your ideas for the plugin over in discussions.</p>"},{"location":"#compatibility","title":"Compatibility","text":"NetBox Version Plugin Version 4.1 0.2.x - 0.3.5 4.2 0.3.6"},{"location":"#installing","title":"Installing","text":""},{"location":"#standard-installation","title":"Standard Installation","text":"<p>Activate your virtual environment and install the plugin:</p> <pre><code>source /opt/netbox/venv/bin/activate\n</code></pre> <p>Install with pip:</p> <pre><code>(venv) $ pip install netbox-librenms-plugin\n</code></pre> <p>Add to your <code>local_requirements.txt</code> to ensure it is automatically reinstalled durintg future upgrades.</p> <pre><code> \"netbox-librenms-plugin\" &gt;&gt; /opt/netbox/netbox/local_requirements.txt\n</code></pre>"},{"location":"#docker","title":"Docker","text":"<p>For adding to a NetBox Docker setup see how to create a custom Docker image. the general instructions for using netbox-docker with plugins.</p> <p>Add the plugin to <code>plugin_requirements.txt</code> (netbox-docker):</p> <pre><code># plugin_requirements.txt\nnetbox-librenms-plugin\n</code></pre>"},{"location":"#configuration","title":"Configuration","text":""},{"location":"#1-enable-the-plugin","title":"1. Enable the Plugin","text":"<p>Enable the plugin in <code>/opt/netbox/netbox/netbox/configuration.py</code>, or if you use netbox-docker, your <code>/configuration/plugins.py</code> file :</p> <pre><code>PLUGINS = [\n    'netbox_librenms_plugin'\n]\n</code></pre>"},{"location":"#2-apply-the-plugin-configuration","title":"2. Apply the plugin configuration","text":"<p>Multi server example:</p> <pre><code>PLUGINS_CONFIG = {\n    'netbox_librenms_plugin': {\n        'servers': {\n            'production': {\n                'display_name': 'Production LibreNMS',\n                'librenms_url': 'https://librenms-prod.example.com',\n                'api_token': 'your_production_token',\n                'cache_timeout': 300,\n                'verify_ssl': True,\n                'interface_name_field': 'ifDescr'\n            },\n            'testing': {\n                'display_name': 'Test LibreNMS',\n                'librenms_url': 'https://librenms-test.example.com',\n                'api_token': 'your_test_token',\n                'cache_timeout': 300,\n                'verify_ssl': False,\n                'interface_name_field': 'ifName'\n            },\n            'development': {\n                'display_name': 'Dev LibreNMS',\n                'librenms_url': 'https://librenms-dev.example.com',\n                'api_token': 'your_dev_token',\n                'cache_timeout': 180,\n                'verify_ssl': False,\n                'interface_name_field': 'ifDescr'\n            }\n        }\n    }\n}\n</code></pre> <p>Or use the original single server confiig example:</p> <pre><code>PLUGINS_CONFIG = {\n    'netbox_librenms_plugin': {\n        'librenms_url': 'https://your-librenms-instance.com',\n        'api_token': 'your_librenms_api_token',\n        'cache_timeout': 300,\n        'verify_ssl': True, # Optional: Change to False if needed,\n        'interface_name_field': 'ifDescr', # Optional: LibreNMS field used for interface name. ifName used as default\n    }\n}\n</code></pre>"},{"location":"#3-apply-database-migrations","title":"3. Apply Database Migrations","text":"<p>Apply database migrations with Netbox <code>manage.py</code>:</p> <pre><code>(venv) $ python manage.py migrate\n</code></pre>"},{"location":"#4-collect-static-files","title":"4. Collect Static Files","text":"<p>The plugin includes static files that need to be collected by NetBox. Run the following command to collect static files:</p> <pre><code>(venv) $ python manage.py collectstatic --no-input\n</code></pre>"},{"location":"#5-restart-netbox","title":"5. Restart Netbox","text":"<p>Restart the Netbox service to apply changes:</p> <pre><code>sudo systemctl restart netbox\n</code></pre>"},{"location":"#6-custom-field","title":"6. Custom Field","text":"<p>It is recommended (but not essential) to add a custom field <code>librenms_id</code> to the Device, Virtual Machine and Interface models in NetBox. Use the following settings:</p> <ul> <li>Object Types:</li> <li>Check dcim &gt; device</li> <li>Check virtualization &gt; virtual machine</li> <li>Check dcim &gt; interface</li> <li>Check virtualization &gt; interfaces (optional)</li> <li>Name: <code>librenms_id</code></li> <li>Label: <code>LibreNMS ID</code></li> <li>Description: (Optional) Add a description like \"LibreNMS ID for LibreNMS Plugin\".</li> <li>Type: Integer</li> <li>Required: Leave unchecked.</li> <li>Default Value: Leave blank.</li> </ul> <p>For more info check out custom field docs</p>"},{"location":"#update","title":"Update","text":"<pre><code>source /opt/netbox/venv/bin/activate\npip install -U netbox-librenms-plugin\npython manage.py migrate\npython manage.py collectstatic --no-input\nsystemctl restart netbox\n</code></pre>"},{"location":"#uninstall","title":"Uninstall","text":"<p>See the instructions for uninstalling plugins.</p>"},{"location":"#credits","title":"Credits","text":"<p>Based on the NetBox plugin tutorial and docs:</p> <ul> <li>demo repository</li> <li>tutorial</li> <li>docs</li> </ul> <p>This package was created with Cookiecutter. Thanks to the <code>netbox-community/cookiecutter-netbox-plugin</code> for the project template.</p>"},{"location":"SUMMARY/","title":"SUMMARY","text":""},{"location":"SUMMARY/#table-of-contents","title":"Table of contents","text":"<ul> <li>NetBox LibreNMS Plugin</li> <li>Features List</li> <li>Usage Tips</li> <li>Using the librenms_id Custom Field</li> <li>interface_mappings</li> <li>Virtual Chassis Support</li> <li>Multi Server Configuration</li> <li>Development Guide</li> <li>Project Structure</li> <li>Views &amp; Inheritance</li> <li>Mixins</li> <li>Templates</li> <li>Changelog</li> <li>Contributing</li> </ul>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#changelog","title":"Changelog","text":""},{"location":"changelog/#0317-2025-10-24","title":"0.3.17 (2025-10-24)","text":""},{"location":"changelog/#improvements","title":"Improvements","text":"<ul> <li>Improve device type matching with prioritized matching strategy</li> <li>Centralize device type matching logic in utils.py (DRY principle)</li> <li>Add word boundary detection for more precise substring matches</li> </ul>"},{"location":"changelog/#0316-2025-10-24","title":"0.3.16 (2025-10-24)","text":""},{"location":"changelog/#new-features","title":"New Features","text":"<ul> <li>Add device field synchronization (serial number, device type, platform)</li> <li>Add virtual chassis inventory support with serial assignment to individual members</li> <li>Add VM information display in LibreNMS status card</li> <li>Add bulk interface mapping import functionality</li> </ul>"},{"location":"changelog/#improvements_1","title":"Improvements","text":"<ul> <li>Improve virtual chassis device matching with LibreNMS for devices with VC member suffixes</li> <li>Enhance virtual chassis logic and member selection</li> </ul>"},{"location":"changelog/#development","title":"Development","text":"<ul> <li>Add GitHub DevContainer setup for easier development environment</li> </ul>"},{"location":"changelog/#fixes","title":"Fixes","text":"<ul> <li>Fix FieldError for librenms_status on device/VM status pages</li> </ul>"},{"location":"changelog/#documentation","title":"Documentation","text":"<ul> <li>Update README with device field sync details</li> <li>Improve virtual chassis documentation</li> <li>Added example Interface Mapping YAML for bulk import</li> </ul>"},{"location":"changelog/#0315-2025-07-12","title":"0.3.15 (2025-07-12)","text":""},{"location":"changelog/#improvements_2","title":"Improvements","text":"<ul> <li>Improve multi-server configuration handling and add connection testing</li> </ul>"},{"location":"changelog/#0314-2025-07-08","title":"0.3.14 (2025-07-08)","text":""},{"location":"changelog/#fixes_1","title":"Fixes","text":"<ul> <li>Filter out invalid IP entries in BaseIPAddressTableView</li> </ul>"},{"location":"changelog/#new-features_1","title":"New Features","text":"<ul> <li>View/Delete NetBox-only (unmatched) interfaces</li> <li>Add multi LibreNMS server configuration support for LibreNMS plugin</li> </ul>"},{"location":"changelog/#documentation_1","title":"Documentation","text":"<ul> <li>Add page for multi server configuration instructions and example</li> </ul>"},{"location":"changelog/#0313-2025-0627","title":"0.3.13 (2025-06=27)","text":""},{"location":"changelog/#new-feature","title":"New Feature","text":"<ul> <li>Add support for IPv6 handling in IP address synchronization</li> </ul>"},{"location":"changelog/#documentation_2","title":"Documentation","text":"<ul> <li>Add basic development documentation</li> </ul>"},{"location":"changelog/#0312-2025-04-11","title":"0.3.12 (2025-04-11)","text":""},{"location":"changelog/#improvements_3","title":"Improvements","text":"<ul> <li>Add VRF selection support to IP address table and sync</li> <li>Implement single IP address verification and VRF assignment</li> <li>Extend single IP verification to support Virtual Machines</li> </ul>"},{"location":"changelog/#under-the-hood","title":"Under the hood","text":"<ul> <li>Refactor cable and IP address synchronization methods for improved transaction handling</li> <li>Refactor IP address enrichment for improved performance</li> </ul>"},{"location":"changelog/#0311-2025-03-31","title":"0.3.11 (2025-03-31)","text":""},{"location":"changelog/#improvements_4","title":"Improvements","text":"<ul> <li>Enhance remote port enrichment for virtual chassis devices</li> </ul>"},{"location":"changelog/#0310-2025-03-17","title":"0.3.10 (2025-03-17)","text":""},{"location":"changelog/#fixes_2","title":"Fixes","text":"<ul> <li>Fix URL error when no interfaces are selected during sync</li> <li>Add hidden SNMP version field to forms and update sync logic</li> </ul>"},{"location":"changelog/#039-2025-03-14","title":"0.3.9 (2025-03-14)","text":""},{"location":"changelog/#fixes_3","title":"Fixes","text":"<ul> <li>Fix missing add_device_modal.html template and form handling</li> <li>Fix missing interfacetypemapping template</li> </ul>"},{"location":"changelog/#038-2025-03-06","title":"0.3.8 (2025-03-06)","text":""},{"location":"changelog/#fixes_4","title":"Fixes","text":"<ul> <li>Fix cable table error when more than one remote device returned</li> <li>Fix cable table checkboxes controls for virtual chassis devices</li> </ul>"},{"location":"changelog/#improvements_5","title":"Improvements","text":"<ul> <li>Add slug check to Site and Location Sync</li> </ul>"},{"location":"changelog/#037-2025-01-22","title":"0.3.7 (2025-01-22)","text":""},{"location":"changelog/#fixes_5","title":"Fixes","text":"<ul> <li>Fix issue with empty queryset to stop fielderror</li> </ul>"},{"location":"changelog/#improvements_6","title":"Improvements","text":"<ul> <li>Enhance filtering options for devices and virtual machines</li> </ul>"},{"location":"changelog/#under-the-hood_1","title":"Under the hood","text":"<ul> <li>Review and refactor docstrings across all files</li> </ul>"},{"location":"changelog/#036-2025-01-21","title":"0.3.6 (2025-01-21)","text":""},{"location":"changelog/#note","title":"NOTE","text":"<p>Netbox v4.2+ required for this release</p>"},{"location":"changelog/#new-feature_1","title":"New Feature","text":"<ul> <li>New dedicated plugin menu item</li> <li>Add device and VM status pages</li> </ul>"},{"location":"changelog/#fixes_6","title":"Fixes","text":"<ul> <li>Add description to interface mapping page</li> </ul>"},{"location":"changelog/#under-the-hood_2","title":"Under the hood","text":"<ul> <li>Update to use new Mac Address object for Netbox v4.2</li> </ul>"},{"location":"changelog/#035-2025-01-13","title":"0.3.5 (2025-01-13)","text":""},{"location":"changelog/#fixes_7","title":"Fixes","text":"<ul> <li>Fix IP Address table not displaying for Virutal Machines</li> </ul>"},{"location":"changelog/#034-2025-01-08","title":"0.3.4 (2025-01-08)","text":""},{"location":"changelog/#fixes_8","title":"Fixes","text":"<ul> <li>Fix VM Interface table not dispalying</li> </ul>"},{"location":"changelog/#033-2025-01-03","title":"0.3.3 (2025-01-03)","text":""},{"location":"changelog/#new-feature_2","title":"New Feature","text":"<ul> <li>Add IP address synchronization</li> </ul>"},{"location":"changelog/#fixes_9","title":"Fixes","text":"<ul> <li>Refactor librenms_id handling in SyncInterfacesView</li> </ul>"},{"location":"changelog/#under-the-hood_3","title":"Under the hood","text":"<ul> <li>Refactor table.py into separate modules for better maintainability</li> <li>Enhance interface data retrieval efficiency</li> </ul>"},{"location":"changelog/#032-2024-12-16","title":"0.3.2 (2024-12-16)","text":""},{"location":"changelog/#fixes_10","title":"Fixes","text":"<ul> <li>Refactor tab handling for interface and cable views</li> <li>Fix Duplicate ID in SNMP forms</li> <li>Refactor cable link processing and fix CSRF token error.</li> <li>Generate unique base ID for TomSelect components in VCInterfaceTable</li> <li>Add countdown interval variable to initializeCountdown function</li> </ul>"},{"location":"changelog/#031-2024-12-13","title":"0.3.1 (2024-12-13)","text":""},{"location":"changelog/#fixes_11","title":"Fixes","text":"<ul> <li>Fix issue with tab selection not working after sync task</li> <li>Updated interface name field tooltip</li> </ul>"},{"location":"changelog/#030-2024-12-13","title":"0.3.0 (2024-12-13)","text":""},{"location":"changelog/#new-setting","title":"New Setting","text":"<ul> <li>Add <code>interface_name_feild</code> optional setting to allow choice of interface name field used when syncing interface data.</li> <li>Add <code>interface_name_field</code> override in GUI for per device control and flexibility.</li> </ul>"},{"location":"changelog/#improvements_7","title":"Improvements","text":"<ul> <li>Add <code>librenms_id</code> to interface sync table and data sync</li> <li>Use of <code>librenms_id</code> custom field on interface lookup for improved matching in the cables table.</li> <li>Add Pagination support to the cables table.</li> </ul>"},{"location":"changelog/#fixes_12","title":"Fixes","text":"<ul> <li>Fix issue with case sensitive hostname matching</li> </ul>"},{"location":"changelog/#under-the-hood_4","title":"Under the hood","text":"<ul> <li>Refactor views into seperate modules for better maintainability</li> </ul>"},{"location":"changelog/#029-2024-11-30","title":"0.2.9 (2024-11-30)","text":""},{"location":"changelog/#fix-pypi-release","title":"Fix pypi release","text":"<p>Add static include in MANIFEST.in for pypi release</p>"},{"location":"changelog/#028-2024-11-29","title":"0.2.8 (2024-11-29)","text":""},{"location":"changelog/#use-of-custom-field","title":"Use of Custom Field","text":"<p>This release introduces the option of using a custom field <code>librenms_id</code> (integer) to device and virtual machine objects in NetBox. The plugin will work without it but it is recommended for LibreNMS API lookups especially if no primary IP or FQDN available.</p> <p>Note: New static javascript file requires running collectstatic after update</p> <pre><code>(venv) $ python manage.py collectstatic --no-input\n</code></pre>"},{"location":"changelog/#new-features_2","title":"New Features","text":"<ul> <li>Add device to LibreNMS using SNMPv3</li> <li>Create cable connection from LIbreNMS links data31</li> <li>Plugin can now use primary IP, hostname or Primary IP DNS Name to identify device in LibreNMS</li> <li>Exclude specific columns when syncing data</li> <li>Filter interface and cable tables</li> <li>Bulk edit Virtual Chassis members</li> </ul>"},{"location":"changelog/#improvements_8","title":"Improvements","text":"<ul> <li>Add pagination to SiteLocationSyncTable</li> <li>Add site location filtering functionality and update template for search</li> <li>Refactor LibreNMSAPI to enhance device ID retrieval logic and include DNS name handling</li> <li>Enhance cable sync with device ID handling and user guidance modal</li> <li>Add device mismatch check and user feedback</li> <li>Add check for empty MAC address in format_mac_address function</li> <li>Increase API request timeout to 20 seconds</li> <li>Fix dropdown menu size issue on click</li> </ul>"},{"location":"changelog/#under-the-hood_5","title":"Under the hood","text":"<ul> <li>Refactor interface enabled status logic</li> <li>Fix handling of data-enabled attribute in interface table</li> <li>Improve interface mapping logic for speed matchingpull/24</li> <li>Refactor cable context handling and improve data rendering in cable tables</li> <li>Refactor Javascript into single file. Add cable sync filters and countdown timer</li> <li>Refactor device addition and enhance SNMP v3 support</li> </ul>"},{"location":"changelog/#027-2024-11-11","title":"0.2.7 (2024-11-11)","text":""},{"location":"changelog/#whats-changed","title":"What's Changed","text":"<ul> <li>Add new interface table logic to handle virtual chassis member selection</li> <li>Update LibreNMS plugin configuration to allow disabling of SSL verification</li> </ul>"},{"location":"changelog/#interface-name-change","title":"Interface name change","text":"<p>The LibreNMS Sync interface names now use the ifDescr from Librenms. This displays the full interface name to better align with the device type library convention. e.g GigabitEthernet1/0/1 instead of Gig1/0/1.</p>"},{"location":"changelog/#026-2024-10-25","title":"0.2.6 (2024-10-25)","text":""},{"location":"changelog/#new-feature_3","title":"New Feature","text":"<ul> <li>Sync Virtual Machine interfaces</li> </ul>"},{"location":"changelog/#bug-fix","title":"Bug fix","text":"<ul> <li>Pagination bug where page contents would duplicate now fixed.</li> </ul>"},{"location":"changelog/#under-the-hood_6","title":"Under the hood","text":"<ul> <li>Refactoring of views into separate files for better maintainability.</li> <li>Code formatting improvements</li> <li>Remove unused elements</li> </ul>"},{"location":"changelog/#025-2024-10-21","title":"0.2.5 (2024-10-21)","text":"<p>Bug fix release: * Missing commas in LibreNMS api module</p>"},{"location":"changelog/#024-2024-10-21","title":"0.2.4 (2024-10-21)","text":""},{"location":"changelog/#enhancements","title":"Enhancements","text":"<ul> <li>Add mac_address, MTU to interface sync</li> <li>Enable select all and shift click on interface sync page rows, and other improvements</li> <li>Interface mapping now accounts for speed of interface     &gt; Update to Interface mapping modal may require recreation of existing mapping.</li> <li>Updated LibreNMS Sync page layout to prepare for new features</li> </ul>"},{"location":"changelog/#under-the-hood_7","title":"Under the hood","text":"<ul> <li>Refactor all views to be class-based</li> <li>Big refactor of device LibreNMS sync views to make way for new features</li> </ul>"},{"location":"changelog/#023-2024-09-30","title":"0.2.3 (2024-09-30)","text":"<ul> <li>Fix bug where wrong template is used when editing interface mappings</li> <li>Remove unused templates from view</li> </ul>"},{"location":"changelog/#022-2024-09-27","title":"0.2.2 (2024-09-27)","text":"<ul> <li>Fix too many arguments to add_device error</li> </ul>"},{"location":"changelog/#021-2024-09-27","title":"0.2.1 (2024-09-27)","text":"<ul> <li>Fix LibreNMS hardware variable not found</li> <li>Add update_device_field to LibreNMS API</li> <li>Add device location Sync button to device plugin tab</li> <li>Change SNMP community from 'text' to 'password' for privacy</li> </ul>"},{"location":"changelog/#020-2024-09-25","title":"0.2.0 (2024-09-25)","text":"<ul> <li>Update to v0.2.0 of the plugin</li> </ul>"},{"location":"changelog/#011-2024-09-24","title":"0.1.1 (2024-09-24)","text":"<ul> <li>First release on PyPI.</li> </ul>"},{"location":"contributing/","title":"Contributing","text":""},{"location":"contributing/#contributing","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p> <p>We love your input! We want to make contributing to this project as easy and transparent as possible, whether it's:</p> <ul> <li>Reporting a bug</li> <li>Discussing the current state of the code</li> <li>Submitting a fix</li> <li>Proposing new features</li> <li>Becoming a maintainer</li> </ul>"},{"location":"contributing/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"contributing/#report-bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/bonzo81/netbox-librenms-plugin/issues.</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Any details about your local environment that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug.</li> </ul>"},{"location":"contributing/#fix-bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#implement-features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with \"enhancement\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#write-documentation","title":"Write Documentation","text":"<p>NetBox LibreNMS Plugin could always use more documentation, whether as part of the official NetBox LibreNMS Plugin docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"contributing/#submit-feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to file an issue at https://github.com/bonzo81/netbox-librenms-plugin/issues.</p> <p>If you are proposing a feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that this is a volunteer-driven project, and that contributions   are welcome :)</li> </ul>"},{"location":"contributing/#get-started","title":"Get Started!","text":"<p>Ready to contribute? Here's how to set up <code>netbox-librenms-plugin</code> for local development.</p> <ol> <li>Fork the <code>netbox-librenms-plugin</code> repo on GitHub.</li> <li> <p>Clone your fork locally</p> <pre><code>$ git clone git@github.com:&lt;username&gt;/netbox-librenms-plugin.git\n</code></pre> </li> <li> <p>Activate the NetBox virtual environment (see the NetBox documentation under Setting up a Development Environment):</p> <pre><code>$ source /opt/netbox/venv/bin/activate\n</code></pre> </li> <li> <p>Add the plugin to NetBox virtual environment in Develop mode (see Plugins Development):</p> <p>To ease development, it is recommended to go ahead and install the plugin at this point using setuptools' <code>develop</code> mode. This will create symbolic links within your Python environment to the plugin development directory. Call <code>pip</code> from the plugin's root directory with the <code>-e</code> flag:</p> <pre><code>$ pip install -e .\n</code></pre> </li> <li> <p>Create a branch for local development:</p> <pre><code>$ git checkout -b name-of-your-bugfix-or-feature\n</code></pre> <p>Now you can make your changes locally.</p> </li> <li> <p>Commit your changes and push your branch to GitHub:</p> <pre><code>$ git add .\n$ git commit -m \"Your detailed description of your changes.\"\n$ git push origin name-of-your-bugfix-or-feature\n</code></pre> </li> <li> <p>Submit a pull request through the GitHub website.</p> </li> </ol>"},{"location":"contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li>The pull request should include tests.</li> <li>If the pull request adds functionality, the docs should be updated. Put    your new functionality into a function with a docstring, and add the    feature to the list in README.md.</li> <li>The pull request should work for Python 3.10+. Check    https://github.com/bonzo81/netbox-librenms-plugin/actions    and make sure that the tests pass for all supported Python versions.</li> </ol>"},{"location":"contributing/#deploying","title":"Deploying","text":"<p>A reminder for the maintainers on how to deploy. Make sure all your changes are committed (including an entry in CHANGELOG.md) and that all tests pass. Then in the github project go to <code>Releases</code> and create a new release with a new tag.  This will automatically upload the release to pypi:</p>"},{"location":"feature_list/","title":"Feature List","text":""},{"location":"feature_list/#features-list","title":"Features List","text":""},{"location":"feature_list/#device","title":"Device","text":"<ul> <li>LibreNMS device identification via:</li> <li>Custom field <code>librenms_id</code> (recommended)</li> <li>Primary IP address</li> <li>Primary IP DNS name</li> <li>Hostname</li> <li>Add device to LibreNMS from netbox via SNMP v2c or v3</li> </ul>"},{"location":"feature_list/#virtual-chassis-support","title":"Virtual Chassis Support","text":"<ul> <li>Automatic VC member selection for each interface</li> <li>Member-specific interface synchronization</li> <li>Bulk member editing capabilities</li> </ul>"},{"location":"feature_list/#interface","title":"Interface","text":"<ul> <li>Create or Update interface in NetBox from LibreNMS interface data</li> <li>Name</li> <li>Description</li> <li>Status (Enabled/Disabled)</li> <li>Type (with custom mapping support)</li> <li>Speed</li> <li>MAC Address</li> <li>MTU</li> <li>Sync all or specific fields</li> </ul>"},{"location":"feature_list/#cable","title":"Cable","text":"<ul> <li>Create Cable connection in NetBox from LibreNMS links data</li> <li>Best results when the custom field <code>librenms_id</code> is populated on interfaces</li> </ul>"},{"location":"feature_list/#ip-address","title":"IP Address","text":"<ul> <li>Create IP address objects in Netbox from LibreNMS device IP data</li> <li>Best results when the custom field <code>librenms_id</code> is populated on interfaces</li> </ul>"},{"location":"feature_list/#location","title":"Location","text":"<ul> <li>NetBox Site to LibreNMS location synchronization</li> <li>Sync location latitude and longitude values from NetBoxx to LibreNMS</li> </ul>"},{"location":"feature_list/#interface-mapping","title":"Interface Mapping","text":"<ul> <li>Customizable LibreNMS to NetBox interface type mappings</li> <li>Interface Speed-based mapping rules</li> <li>Bulk import support</li> </ul>"},{"location":"development/","title":"Overview","text":""},{"location":"development/#development-guide-navigating-the-codebase","title":"Development Guide: Navigating the Codebase","text":"<p>This guide is intended for developers and contributors working on the NetBox LibreNMS Plugin. It provides a broad overview of the codebase structure and key elements. For detailed NetBox plugin development documentation, see the official NetBox documentation.</p>"},{"location":"development/#contents","title":"Contents","text":"<ul> <li>Project Structure: Overview of the main folders and files in the plugin.</li> <li>Views &amp; Inheritance: How views are organized, inheritance patterns, and extension tips.</li> <li>Mixins: Reusable logic for views, including API access and caching.</li> <li>Templates: Template structure, conventions, and customization tips.</li> </ul>"},{"location":"development/mixins/","title":"Mixins","text":""},{"location":"development/mixins/#mixins","title":"Mixins","text":"<p>Mixins in <code>views/mixins.py</code> provide reusable logic to keep views clean and DRY (Don't Repeat Yourself). They are designed to be combined with Django or NetBox views to add specific behaviors or shared functionality. When adding new views, consider using or extending these mixins to maintain consistency and reduce code duplication.</p>"},{"location":"development/mixins/#key-mixins","title":"Key Mixins","text":"<p>LibreNMSAPIMixin</p> <ul> <li>Provides a <code>librenms_api</code> property for accessing the LibreNMS API from any view.</li> <li>Ensures a single instance of the API client is reused per view instance.</li> <li>Example usage: Add to views that need to fetch or sync data with LibreNMS.</li> </ul> <p>CacheMixin</p> <ul> <li>Supplies helper methods for generating cache keys related to objects and data types (e.g., ports, links).</li> <li>Useful for views that cache data fetched from LibreNMS to improve performance.</li> <li>Methods:<ul> <li><code>get_cache_key(obj, data_type=\"ports\")</code>: Returns a unique cache key for the object and data type.</li> <li><code>get_last_fetched_key(obj, data_type=\"ports\")</code>: Returns a cache key for tracking when data was last fetched.</li> </ul> </li> </ul>"},{"location":"development/mixins/#how-to-use-mixins","title":"How to Use Mixins","text":"<p>To use a mixin, simply add it to the inheritance list of your view class. For example:</p> <pre><code>from .mixins import LibreNMSAPIMixin, CacheMixin\n\nclass MyCustomView(LibreNMSAPIMixin, CacheMixin, SomeBaseView):\n    # ... your view logic ...\n</code></pre> <p>Mixins can be combined as needed. Place mixins before the main base view to ensure their methods and properties are available.</p>"},{"location":"development/structure/","title":"Project Structure","text":""},{"location":"development/structure/#project-structure","title":"Project Structure","text":"<p>This document provides an overview of the NetBox LibreNMS Plugin's codebase organization.</p>"},{"location":"development/structure/#main-directories","title":"Main Directories","text":"<ul> <li><code>netbox_librenms_plugin/</code> \u2014 Main plugin code</li> <li><code>views/</code> \u2014 Custom views for devices, mappings, VMs, etc.<ul> <li><code>base/</code> \u2014 Abstract base views for shared logic</li> <li><code>sync/</code> \u2014 Views for synchronization logic</li> </ul> </li> <li><code>models.py</code> \u2014 Database models</li> <li><code>forms.py</code> \u2014 Custom forms</li> <li><code>tables/</code> \u2014 Table definitions for UI</li> <li><code>templates/</code> \u2014 Custom templates<ul> <li><code>netbox_librenms_plugin/</code> \u2014 Main template directory</li> <li><code>inc/</code> \u2014 Shared template fragments (e.g., paginator)</li> </ul> </li> <li><code>api/</code> \u2014 API serializers, views, and URLs</li> <li><code>migrations/</code> \u2014 Django migrations</li> <li><code>utils.py</code> \u2014 Utility functions</li> <li><code>navigation.py</code> \u2014 Menu/navigation integration</li> <li><code>static/</code> \u2014 Static assets (JS, CSS)<ul> <li><code>netbox_librenms_plugin/</code> \u2014 Plugin-specific static files</li> <li><code>js/</code> \u2014 JavaScript files</li> </ul> </li> <li><code>tests/</code> \u2014 Test suite</li> <li><code>docs/</code> \u2014 Documentation</li> </ul>"},{"location":"development/templates/","title":"Templates","text":""},{"location":"development/templates/#templates","title":"Templates","text":"<p>Templates are located in <code>templates/netbox_librenms_plugin/</code> and follow NetBox's conventions, using Django's template language. The plugin uses a combination of base templates, partials, and includes to keep the UI modular and maintainable.</p>"},{"location":"development/templates/#structure-and-conventions","title":"Structure and Conventions","text":"<ul> <li>Base templates (e.g., <code>librenms_sync_base.html</code>, <code>interfacetypemapping.html</code>) typically extend NetBox's generic templates (like <code>generic/object.html</code> or <code>generic/object_list.html</code>).</li> <li>Partials and includes (e.g., <code>_interface_sync.html</code>, <code>_interface_sync_content.html</code>, <code>_cable_sync.html</code>) are used for reusable UI components and AJAX/HTMX content updates.</li> <li>The <code>inc/</code> directory contains shared fragments, such as pagination controls (<code>paginator.html</code>).</li> </ul>"},{"location":"development/templates/#customization-and-inheritance","title":"Customization and Inheritance","text":"<ul> <li>Use the Django template tag <code>extends</code> to build on top of NetBox or plugin base templates, and the <code>block</code> tag to override or inject content.</li> <li>Use the Django template tag <code>include</code> for reusable sections (e.g., tables, forms, or modal dialogs).</li> <li>Static assets (JS/CSS) are loaded with the Django template tag <code>load static</code> and referenced using the <code>static</code> tag.</li> <li>Context variables and template tags (e.g., <code>helpers</code>, <code>plugins</code>, <code>render_table</code>) are used to render dynamic content and integrate with NetBox features.</li> </ul>"},{"location":"development/templates/#examples","title":"Examples","text":"<p>Sync Views:</p> <ul> <li><code>librenms_sync_base.html</code> provides the main layout for device/VM sync pages, extending NetBox's object template and including custom blocks for status, actions, and content.</li> <li><code>_interface_sync.html</code> and <code>_interface_sync_content.html</code> are used for the interface sync tab, supporting dynamic updates and user actions (like syncing selected interfaces).</li> </ul> <p>Mapping Views:</p> <ul> <li><code>interfacetypemapping.html</code> and <code>interfacetypemapping_list.html</code> display and manage interface type mappings, using table layouts and info alerts.</li> </ul> <p>For more on NetBox's template system, see the NetBox documentation.</p>"},{"location":"development/views/","title":"Views & Inheritance","text":""},{"location":"development/views/#views-inheritance","title":"Views &amp; Inheritance","text":"<p>Views are organized by resource type (e.g., devices, mappings, VMs) in the <code>views/</code> directory. The codebase uses a layered approach to views, leveraging inheritance and mixins to maximize code reuse and maintainability.</p>"},{"location":"development/views/#view-organization","title":"View Organization","text":"<p>Resource-specific views:</p> <ul> <li><code>device_views.py</code>, <code>vm_views.py</code>, <code>mapping_views.py</code>, etc. contain views for each main resource type.</li> </ul> <p>Base views:</p> <ul> <li>The <code>base/</code> subdirectory contains abstract base views (e.g., <code>BaseLibreNMSSyncView</code>, <code>BaseInterfaceTableView</code>) that encapsulate shared logic for related resources.</li> </ul> <p>Mixins:</p> <ul> <li>Shared behaviors (e.g., API access, caching) are factored into mixins in <code>mixins.py</code> and combined with base or resource-specific views as needed.</li> </ul>"},{"location":"development/views/#inheritance-patterns","title":"Inheritance Patterns","text":"<ul> <li>Most resource-specific views inherit from a base view in <code>base/</code> and one or more mixins.</li> <li>Base views themselves often inherit from NetBox or Django generic views (e.g., <code>generic.ObjectListView</code>, <code>django.views.View</code>).</li> <li>This allows resource-specific views to override or extend only the methods they need, while inheriting default behaviors from base classes and mixins.</li> </ul>"},{"location":"development/views/#example-device-sync-view","title":"Example: Device Sync View","text":"<pre><code>from .base.librenms_sync_view import BaseLibreNMSSyncView\nfrom .mixins import LibreNMSAPIMixin\n\nclass DeviceLibreNMSSyncView(BaseLibreNMSSyncView):\n    # Inherits API access and sync logic from base/mixins\n    # Only device-specific logic needs to be implemented here\n    ...\n</code></pre>"},{"location":"development/views/#example-interface-table-view","title":"Example: Interface Table View","text":"<pre><code>from .base.interfaces_view import BaseInterfaceTableView\nfrom .mixins import CacheMixin, LibreNMSAPIMixin\n\nclass DeviceInterfaceTableView(BaseInterfaceTableView):\n    model = Device\n    # Implements get_interfaces and get_redirect_url for devices\n    ...\n</code></pre>"},{"location":"development/views/#customizing-or-adding-views","title":"Customizing or Adding Views","text":"<ul> <li>To add a new view for a resource, inherit from the relevant base view and mixins, then override or extend methods as needed.</li> <li>Use the base views as templates for structure and required methods.</li> <li>Register new views in <code>urls.py</code> and add templates if needed.</li> </ul>"},{"location":"development/views/#tips","title":"Tips","text":"<ul> <li>Check the <code>base/</code> directory for reusable logic before writing new view code.</li> <li>Use mixins for cross-cutting concerns (API, caching, permissions).</li> <li>Keep resource-specific views focused on their unique logic; delegate shared logic to base classes and mixins.</li> </ul>"},{"location":"usage_tips/","title":"Usage Tips","text":""},{"location":"usage_tips/#usage-tips","title":"Usage Tips","text":""},{"location":"usage_tips/#initial-setup","title":"Initial Setup","text":"<ol> <li> <p>Configure Custom Field</p> <ul> <li>Set up the <code>librenms_id</code> custom field for optimal device matching</li> <li>This ensures reliable device identification between NetBox and LibreNMS</li> </ul> </li> <li> <p>Configure Interface Mappings</p> <ul> <li>Review and set up interface type mappings before synchronization</li> <li>Create specific mappings for your network equipment types</li> <li>Pay attention to speed-based mappings for accurate interface types</li> </ul> </li> <li> <p>Multi Server Configuration</p> <ul> <li>Configure multiple LibreNMS instances in your NetBox configuration</li> <li>Switch between different LibreNMS servers through the web interface</li> <li>Maintain backward compatibility with single-server configurations</li> </ul> </li> </ol>"},{"location":"usage_tips/#device-synchronization","title":"Device Synchronization","text":""},{"location":"usage_tips/#devices","title":"Devices","text":"<ol> <li>Ensure devices have either:<ul> <li>Primary IP configured</li> <li>Valid DNS name (set on the Primary IP)</li> <li>hostname (that matches LibreNMS hostname)</li> </ul> </li> <li>The plugin will populate the <code>librenms_id</code> custom field if the device is found in LibreNMS</li> </ol>"},{"location":"usage_tips/#virtual-chassis","title":"Virtual Chassis","text":"<ol> <li>The plugin automatically selects a sync device using priority: <code>librenms_id</code> \u2192 master with IP \u2192 any member with IP \u2192 lowest position</li> <li>Only the sync device should have the <code>librenms_id</code> custom field set</li> <li> <p>When possible, chassis member position should match interface names </p> <p>e.g. switch 1 = eth1/0/1, switch 2 = eth2/0/1</p> </li> <li> <p>Verify member selection before bulk synchronization</p> </li> </ol>"},{"location":"usage_tips/#interface-management","title":"Interface Management","text":"<ol> <li>Verify Before Sync<ul> <li>Review interface mappings indicated by the link icons</li> <li>Check speed and type matches</li> <li>Confirm member assignments for virtual chassis</li> </ul> </li> <li>Exlude columns to exclude from interface sync<ul> <li>Sync only the values you want to sync</li> </ul> </li> </ol>"},{"location":"usage_tips/#cable-management","title":"Cable Management","text":"<ol> <li>Preparation<ul> <li>Ensure devices are properly identified in both systems</li> <li>Open LibreNMS Sync on all devices to populate librenms_id custom field</li> <li>Remote Device and Remote interface need to be found in NetBox for cable creation to work</li> <li>Check Device and Interface naming</li> </ul> </li> </ol>"},{"location":"usage_tips/#best-practices","title":"Best Practices","text":"<ol> <li>Regular Maintenance<ul> <li>Periodically review and update interface mappings</li> <li>Keep custom fields current</li> </ul> </li> </ol>"},{"location":"usage_tips/#optimization","title":"Optimization","text":"<pre><code>- DNS lookup time can slow response of the API call to LibreNMS\n</code></pre>"},{"location":"usage_tips/custom_field/","title":"Custom Field","text":""},{"location":"usage_tips/custom_field/#using-the-librenms_id-custom-field","title":"Using the <code>librenms_id</code> Custom Field","text":""},{"location":"usage_tips/custom_field/#overview","title":"Overview","text":"<p>To enhance device identification and synchronization between NetBox and LibreNMS, this plugin supports using a custom field <code>librenms_id</code> on Device, Virtual Machine and Interface objects. While the plugin works without it, using this custom field is recommended for LibreNMS API lookups, and to assist with matching the remote device and remote interfaces for cable creation in Netbox. It can also be entered manually if no primary IP or FQDN is available.</p> <p>For the Device and Virtual Machine objects the plugin will automatically populate the LibreNMS ID custom field when opening the LibreNMS Sync page if the device has been found in LibreNMS.</p> <p>For the Interface object, the plugin will automatically populate the LibreNMS ID custom field when the interface data is synced from LibreNMS.</p>"},{"location":"usage_tips/custom_field/#benefits-of-using-librenms_id","title":"Benefits of Using <code>librenms_id</code>","text":"<ul> <li>Improved Device Matching: Ensures accurate matching between NetBox and LibreNMS devices.</li> <li>Fallback Identification: Useful when devices lack a primary IP or FQDN.</li> <li>Efficient Synchronization: Enhances the reliability of API lookups.</li> <li>Cable creation: Allows better device identification for the creation of cables between NetBox devices.</li> </ul>"},{"location":"usage_tips/custom_field/#suggested-custom-field-setup","title":"Suggested Custom Field Setup","text":"<p>Follow these steps to create the <code>librenms_id</code> custom field in NetBox:</p> <ol> <li> <p>Navigate to Custom Fields:</p> <ul> <li>Go to Customization in the NetBox sidebar.</li> <li>Click on Custom Fields.</li> </ul> </li> <li> <p>Add a New Custom Field:</p> <ul> <li>Click the Add a custom field button.</li> </ul> </li> <li> <p>Configure the Custom Field:</p> <ul> <li>Object Types: <ul> <li>Check dcim &gt; device</li> <li>Check virtualization &gt; virtual machine</li> <li>Check dcim &gt; interface</li> <li>Check virtualization &gt; interfaces (optional)</li> </ul> </li> <li>Name: <code>librenms_id</code></li> <li>Label: <code>LibreNMS ID</code></li> <li>Description: (Optional) Add a description like \"LibreNMS Device ID for synchronization\".</li> <li>Type: Integer</li> <li>Required: Leave unchecked (optional).</li> <li>Default Value: Leave blank.</li> </ul> </li> <li> <p>Save the Custom Field:</p> <ul> <li>Click Create to save the custom field.</li> </ul> </li> </ol>"},{"location":"usage_tips/custom_field/#manually-assign-a-value-to-librenms_id","title":"Manually assign a value to <code>librenms_id</code>","text":"<p>You can manually assign a value to the <code>librenms_id</code> custom field for a device using the following steps:</p> <ol> <li> <p>Edit the Device:</p> <ul> <li>Navigate to the device in NetBox.</li> <li>Click the Edit button.</li> </ul> </li> <li> <p>Set the LibreNMS ID:</p> <ul> <li>Scroll to the Custom Fields section.</li> <li>Enter the LibreNMS device ID in the <code>librenms_id</code> field.</li> </ul> </li> <li> <p>Save Changes:</p> <ul> <li>Click Update to save the device.</li> </ul> </li> </ol>"},{"location":"usage_tips/custom_field/#notes","title":"Notes","text":"<ul> <li>If <code>librenms_id</code> is set, the plugin will prioritize it over other identification methods.</li> <li>Ensure the <code>librenms_id</code> corresponds to the correct device ID in LibreNMS to prevent mismatches.</li> <li>The custom field is optional but recommended for optimal plugin performance.</li> <li>Using the custom field on interfaces will greatly improve the interface matching required for cable creation.</li> </ul>"},{"location":"usage_tips/interface_mappings/","title":"Interface Mappings","text":""},{"location":"usage_tips/interface_mappings/#interface_mappings","title":"interface_mappings","text":""},{"location":"usage_tips/interface_mappings/#quick-intro","title":"Quick Intro","text":"<p>Interface type mappings control how LibreNMS interface types are translated to NetBox interface types during synchronization.</p> <p>The mappings can be customized in the plugin settings menu.</p> <p>A mapping of LibreNMS Type an LibreNMS Speed combine to make a unique group that map to a Netbox interface type. This means multiple mapping for the same LibreNMS Type can be created.</p> <p>Note: The LibreNMS Speed is entered as Kbps</p> <p>Example:</p> <pre><code>* ethernetCsmacd + 10000000 = 10GBASE-T (10GE)\n* ethernetCsmacd + 1000000 = 1000BASE-T (1GE)\n* ethernetCsmacd + 100000 = 100BASE-TX (10/100ME)\n</code></pre>"},{"location":"usage_tips/interface_mappings/#how-to-use-interface-mappings","title":"How to Use Interface Mappings","text":""},{"location":"usage_tips/interface_mappings/#accessing-the-page","title":"Accessing the Page:","text":"<ul> <li>From the main menu, navigate to the Plugins section</li> <li>Under Netbox Librenms Plugin, Select \"Interface Mappings\"</li> </ul>"},{"location":"usage_tips/interface_mappings/#creating-a-new-mapping","title":"Creating a New Mapping:","text":"<ul> <li>Click the green <code>+</code> or <code>Add</code> button either from the menu or on the Interface Mappings page</li> <li>Enter LibreNMS interface type. You can copy this from plugin's device interface sync page</li> <li>Enter Librenms interface speed as Kbps</li> <li>Select the Netbox interface type from the dropdown</li> <li>Click <code>Create</code> to save the mapping</li> </ul>"},{"location":"usage_tips/interface_mappings/#bulk-importing-mappings","title":"Bulk Importing Mappings:","text":"<p>The plugin supports NetBox's standard bulk import feature for interface mappings. Click the Import button on the Interface Mappings page to access the import interface.</p> <p>YAML Example:</p> <pre><code>---\n- librenms_type: ethernetCsmacd\n  librenms_speed: 1000000\n  netbox_type: 1000base-t\n  description: \"Standard Gigabit Ethernet ports\"\n\n- librenms_type: propVirtual\n  librenms_speed: 1000000\n  netbox_type: virtual\n  description: \"Virtual interfaces with 1G speed\"\n\n- librenms_type: softwareLoopback\n  librenms_speed: 8000000\n  netbox_type: virtual\n  description: \"Loopback interfaces\"\n\n- librenms_type: ethernetCsmacd\n  librenms_speed: 10000000\n  netbox_type: 10gbase-t\n  description: \"10 Gigabit Ethernet copper connections\"\n\n- librenms_type: ethernetCsmacd\n  librenms_speed: 100000\n  netbox_type: 100base-tx\n  description: \"Fast Ethernet 100Mbps ports\"\n\n- librenms_type: ethernetCsmacd\n  librenms_speed: null\n  netbox_type: 1000base-t\n  description: \"Default mapping for Ethernet without speed detection\"\n\n- librenms_type: ethernetCsmacd\n  librenms_speed: 40000000\n  netbox_type: 40gbase-x-qsfpp\n  description: \"40 Gigabit QSFP+ interfaces\"\n\n- librenms_type: ethernetCsmacd\n  librenms_speed: 25000000\n  netbox_type: 25gbase-x-sfp28\n  description: \"25 Gigabit SFP28 interfaces\"\n\n- librenms_type: propVirtual\n  librenms_speed: null\n  netbox_type: virtual\n  description: \"Generic virtual interfaces\"\n\n- librenms_type: ieee8023adLag\n  librenms_speed: null\n  netbox_type: lag\n  description: \"Link aggregation groups (port channels)\"\n\n- librenms_type: softwareLoopback\n  librenms_speed: null\n  netbox_type: virtual\n  description: \"Software loopback interfaces\"\n</code></pre> <p>Notes:</p> <ul> <li><code>librenms_speed</code> is optional - use <code>null</code> or omit for type-only mappings</li> <li><code>description</code> is optional - provides context for each mapping</li> <li>The combination of <code>librenms_type</code> and <code>librenms_speed</code> must be unique</li> <li>Supports CSV, JSON, and YAML formats</li> </ul>"},{"location":"usage_tips/interface_mappings/#editing-existing-mappings","title":"Editing Existing Mappings:","text":"<ul> <li>On the Mappings page, Locate the desired mapping in the list</li> <li>Click the <code>edit</code> (pencil icon) button</li> <li>Modify the field mappings as needed</li> <li>Save the changes</li> </ul>"},{"location":"usage_tips/interface_mappings/#deleting-mappings","title":"Deleting Mappings:","text":"<ul> <li>Find the mapping you wish to remove</li> <li>Select the <code>Delete</code> button from the drop down</li> <li>Confirm the deletion when prompted</li> </ul>"},{"location":"usage_tips/interface_mappings/#applying-mappings","title":"Applying Mappings:","text":"<ul> <li>Mappings are automatically applied when interface data is synced between LibreNMS and Netbox</li> <li>If a mapping exist for an interface, it will show on the interface sync page with the icon </li> <li>If a mapping does not exist, it will show the icon </li> </ul>"},{"location":"usage_tips/interface_mappings/#best-practices","title":"Best Practices","text":"<ul> <li>Check mappings are correct before performing a sync to avoid data errors</li> <li>Regularly review and update your mappings to ensure they remain accurate</li> </ul>"},{"location":"usage_tips/multi_server_configuration/","title":"Multi server configuration","text":""},{"location":"usage_tips/multi_server_configuration/#multi-server-librenms-configuration","title":"Multi-Server LibreNMS Configuration","text":""},{"location":"usage_tips/multi_server_configuration/#overview","title":"Overview","text":"<p>The NetBox LibreNMS plugin now supports multiple LibreNMS servers. This allows you to:</p> <ul> <li>Configure multiple LibreNMS instances in your NetBox configuration</li> <li>Switch between different LibreNMS servers through the web interface</li> <li>Maintain backward compatibility with single-server configurations</li> </ul>"},{"location":"usage_tips/multi_server_configuration/#configuration","title":"Configuration","text":""},{"location":"usage_tips/multi_server_configuration/#multi-server-configuration","title":"Multi-Server Configuration","text":"<p>Update your NetBox <code>configuration.py</code> file:</p> <pre><code>PLUGINS_CONFIG = {\n    'netbox_librenms_plugin': {\n        'servers': {\n            'production': {\n                'display_name': 'Production LibreNMS',\n                'librenms_url': 'https://librenms-prod.example.com',\n                'api_token': 'your_production_token',\n                'cache_timeout': 300,\n                'verify_ssl': True,\n                'interface_name_field': 'ifDescr'\n            },\n            'testing': {\n                'display_name': 'Test LibreNMS',\n                'librenms_url': 'https://librenms-test.example.com',\n                'api_token': 'your_test_token',\n                'cache_timeout': 300,\n                'verify_ssl': False,\n                'interface_name_field': 'ifName'\n            },\n            'development': {\n                'display_name': 'Dev LibreNMS',\n                'librenms_url': 'https://librenms-dev.example.com',\n                'api_token': 'your_dev_token',\n                'cache_timeout': 180,\n                'verify_ssl': False,\n                'interface_name_field': 'ifDescr'\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"usage_tips/multi_server_configuration/#legacy-single-server-configuration-backward-compatible","title":"Legacy Single-Server Configuration (Backward Compatible)","text":"<p>The original configuration format is still supported:</p> <pre><code>PLUGINS_CONFIG = {\n    'netbox_librenms_plugin': {\n        'librenms_url': 'https://your-librenms-instance.com',\n        'api_token': 'your_librenms_api_token',\n        'cache_timeout': 300,\n        'verify_ssl': True,\n        'interface_name_field': 'ifDescr'\n    }\n}\n</code></pre>"},{"location":"usage_tips/multi_server_configuration/#usage","title":"Usage","text":"<ol> <li>Navigate to LibreNMS Plugin &gt; Settings &gt; Server Settings</li> <li>Select your desired LibreNMS server from the dropdown</li> <li>Click Save Settings</li> </ol> <p>All subsequent LibreNMS operations will use the selected server.</p>"},{"location":"usage_tips/multi_server_configuration/#configuration-options","title":"Configuration Options","text":"<p>Each server configuration supports the following options:</p> <ul> <li><code>display_name</code>: Human-readable name for the server (optional)</li> <li><code>librenms_url</code>: URL of the LibreNMS instance (required)</li> <li><code>api_token</code>: API token for authentication (required)</li> <li><code>cache_timeout</code>: Cache timeout in seconds (optional, default: 300)</li> <li><code>verify_ssl</code>: Whether to verify SSL certificates (optional, default: True)</li> <li><code>interface_name_field</code>: LibreNMS field for interface names (optional, default: 'ifDescr')</li> </ul>"},{"location":"usage_tips/multi_server_configuration/#migration-from-single-to-multi-server","title":"Migration from Single to Multi-Server","text":"<ol> <li>Add the <code>servers</code> configuration block to your <code>configuration.py</code></li> <li>Move your existing single-server configuration into a server block (e.g., 'default' or 'production')</li> <li>Restart NetBox</li> <li>Select your server in the plugin settings</li> </ol> <p>The plugin will automatically detect and use the new configuration format.</p>"},{"location":"usage_tips/virtual_chassis/","title":"Virtual Chassis","text":""},{"location":"usage_tips/virtual_chassis/#virtual-chassis-support","title":"Virtual Chassis Support","text":""},{"location":"usage_tips/virtual_chassis/#overview","title":"Overview","text":"<p>The plugin automatically detects Virtual Chassis configurations and displays all VC interfaces on the LibreNMS Sync page of the designated sync device.</p> <p>LibreNMS Sync Device Selection Priority: 1. Member with <code>librenms_id</code> custom field (highest priority) 2. Master device with primary IP 3. Any member with primary IP 4. Member with lowest VC position</p> <p>Note: LibreNMS treats a Virtual Chassis as a single logical device. Only one member (the sync device) should have the <code>librenms_id</code> custom field set.</p>"},{"location":"usage_tips/virtual_chassis/#how-it-works","title":"How It Works","text":""},{"location":"usage_tips/virtual_chassis/#member-selection","title":"Member Selection","text":"<p>When viewing a device that is part of a virtual chassis, the plugin will:</p> <ol> <li>Detects if the device is part of a virtual chassis and dispalys 'Virtual Chassis Member' column.</li> <li>Automatically select the VC member by matching the device VC position to the first number in the interface name.</li> <li>Allows selection of specific members if the auto select is not correct.</li> </ol> <p>Selecting a new member will trigger a new interface details comparison against the newly selected NEtbox VC member.</p> <p>Interfaces data is then synced to the selected VC member in Netbox.</p>"},{"location":"usage_tips/virtual_chassis/#virtual-chassis-member-select","title":"Virtual Chassis Member Select","text":""}]}